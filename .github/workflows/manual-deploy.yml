name: Manual Deploy to Cloud Run

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      deploy_backend:
        description: 'Deploy backend service'
        required: true
        default: true
        type: boolean
      deploy_frontend:
        description: 'Deploy frontend service'
        required: true
        default: true
        type: boolean

env:
  PROJECT_ID: healthcare-forms-v2
  REGION: us-central1
  BACKEND_SERVICE: healthcare-forms-backend
  FRONTEND_SERVICE: healthcare-forms-frontend

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Docker Auth
      run: gcloud auth configure-docker

    # Deploy Backend
    - name: Build and Deploy Backend
      if: ${{ inputs.deploy_backend }}
      run: |
        echo "ðŸ”¨ Building backend image..."
        docker build -t gcr.io/$PROJECT_ID/$BACKEND_SERVICE:${{ inputs.environment }}-$GITHUB_SHA ./backend-fastapi
        
        echo "ðŸ“¤ Pushing backend image..."
        docker push gcr.io/$PROJECT_ID/$BACKEND_SERVICE:${{ inputs.environment }}-$GITHUB_SHA
        
        echo "ðŸš€ Deploying backend to Cloud Run..."
        gcloud run deploy $BACKEND_SERVICE-${{ inputs.environment }} \
          --image gcr.io/$PROJECT_ID/$BACKEND_SERVICE:${{ inputs.environment }}-$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --memory 512Mi \
          --cpu 1 \
          --timeout 300 \
          --concurrency 80 \
          --max-instances 100 \
          --set-env-vars "ENVIRONMENT=${{ inputs.environment }}" \
          --set-env-vars "GOOGLE_APPLICATION_CREDENTIALS=/app/healthcare-forms-v2-credentials.json"

    # Deploy Frontend
    - name: Build and Deploy Frontend
      if: ${{ inputs.deploy_frontend }}
      run: |
        # Get backend URL if it was deployed
        if [ "${{ inputs.deploy_backend }}" = "true" ]; then
          BACKEND_URL=$(gcloud run services describe $BACKEND_SERVICE-${{ inputs.environment }} --region=$REGION --format='value(status.url)')
        else
          BACKEND_URL=$(gcloud run services describe $BACKEND_SERVICE-${{ inputs.environment }} --region=$REGION --format='value(status.url)' || echo "https://healthcare-forms-backend-yv6dlhmhwa-uc.a.run.app")
        fi
        
        echo "ðŸ”¨ Building frontend image with backend URL: $BACKEND_URL"
        docker build \
          --build-arg REACT_APP_API_URL=$BACKEND_URL \
          -t gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:${{ inputs.environment }}-$GITHUB_SHA \
          ./frontend
        
        echo "ðŸ“¤ Pushing frontend image..."
        docker push gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:${{ inputs.environment }}-$GITHUB_SHA
        
        echo "ðŸš€ Deploying frontend to Cloud Run..."
        gcloud run deploy $FRONTEND_SERVICE-${{ inputs.environment }} \
          --image gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:${{ inputs.environment }}-$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --memory 256Mi \
          --cpu 1 \
          --port 80 \
          --set-env-vars "REACT_APP_API_URL=$BACKEND_URL" \
          --set-env-vars "ENVIRONMENT=${{ inputs.environment }}"

    # Output URLs
    - name: Get Service URLs
      run: |
        echo "ðŸŽ‰ Deployment complete!"
        echo ""
        if [ "${{ inputs.deploy_backend }}" = "true" ]; then
          BACKEND_URL=$(gcloud run services describe $BACKEND_SERVICE-${{ inputs.environment }} --region=$REGION --format='value(status.url)')
          echo "Backend URL: $BACKEND_URL"
        fi
        if [ "${{ inputs.deploy_frontend }}" = "true" ]; then
          FRONTEND_URL=$(gcloud run services describe $FRONTEND_SERVICE-${{ inputs.environment }} --region=$REGION --format='value(status.url)')
          echo "Frontend URL: $FRONTEND_URL"
        fi